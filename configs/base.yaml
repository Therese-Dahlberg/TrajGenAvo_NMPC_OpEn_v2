# This constitutes the default configuration file for the mpc-generator. 
################################################################################
################################################################################
################################################################################

# Parameters that are essential for the mpc-formulation. Changing these will require a rebuild of the solution
n_hor: 20           # The length of the receding horizon controller 
lin_vel_min: -0.5   # Vehicle contraint on the minimal velocity possible
lin_vel_max: 1.5    # Vehicle contraint on the maximal velocity possible
lin_acc_min: -3     # Vehicle contraint on the maximal linear retardation
lin_acc_max: 3      # Vehicle contraint on the maximal linear acceleration
lin_jerk_min: -0.5
lin_jerk_max: 0.5
ang_vel_max: 3    # Vehicle contraint on the maximal angular velocity
ang_acc_max: 3      # Vehicle contraint on the maximal angular acceleration (considered to be symmetric)
ang_jerk_min: -0.2
ang_jerk_max: 0.2

# Parameters for constraints. This shouldn't really be here. It should maybe be in graphs
constraint:         # Distance constraint
    d: 1                        # The distance the atrs should keep in m
    distance_error_lb: -0.05    # lower bound error margin in m, actual ok distance: d + distance_error_lb <d_ok < d + distance_error_ub
    distance_error_ub: 0.05     # upper bound error margin
    distance_lb: 0.95          # Lower bound distance between ATRs
    distance_ub: 1.05           # Upper bound distance between ATRs
    formation_angle: 0
    formation_angle_error_margin: 0
    slave_offset: [1, 0, 0]  # Where the slave should start in relation to the master # Shouldn't be used anymore

throttle_ratio: 1.0 # What % of the maximal velocity should we try to
num_steps_taken: 1  # How many steps should be taken from each mpc-solution. Range (1 - n_hor)
ts: 0.1             # Size of the time-step
vel_red_steps: 20   # Number of timesteps for braking when close to goal position
distance_to_avoid_unexpected_obstacles: 1 # How far ahead of unexpected obstacles it should start to avoid. Unsure if this is used
trajectory_length: 20 # How long the trajectory should be. Range (1 - n_hor)
dist_to_start_turn: 2
ang_detect_dyn_obs: 1.57 # The angle around the master at which to detect dynamic obstacles. It's symmetric so pi would yield a full circle
dist_detect_dyn_obs: 3 # The radius of the circle sector in which dynamic obstacles are detected.
enable_slave: True # If there should should be a slave. If set to False there will only be a master robot.
aggressive_factor : 0.1    # Between 0 & 1, between old people driving & rally driver. 

# Helper variables (Generally does not have to be changed)
nx: 6      # Number of states for the robot x_master, y_master, theta_master, x_slave, y_slave, theta_slave
nu: 4      # Number of control inputs

# Vehicle parameters
vehicle_width:  0.5   # Vehicle width in meters
vehicle_margin: .25  # Extra margin used for padding in meters

# Building options in the optimizer
build_type: 'debug'           # Can have 'debug' or 'release'
build_directory: 'mpc_build'  # Name of the directory where the build is created
bad_exit_codes: ["NotConvergedIterations", "NotConvergedOutOfTime"] # Optimizer specific names
optimizer_name: 'trajectory_generator_solver' # optimizer type

# Obstacle parameters
min_vertices: 3         # The minimum amount of vertices per obstacle
max_vertices: 5         # The maximum amount of vertices per obstacle
n_param_line: 3         # Number of variables per line (describe how many parameters are needed for a line inequality/half-space)
n_param_vertex: 2       # Number of variables per vertex (x,y coordinates of starting vertex of each line; since polygons are assumed to closed this defines the corners of the polygon)
n_param_dyn_obs: 6      # Number of variables per ellipse ( dynamic obs)
n_obs_of_each_vertices: 5 # How many obstacles there should be of each kind of obstacle 
#TODO: Add special case for triangles. There should be allowed more triangles
n_dyn_obs: 5 # Maximal number of dynamic obstacles
n_bounds_vertices : 9 # Number of vertices for drivable area








